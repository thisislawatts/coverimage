{"version":3,"sources":["../src/coverimage.js"],"names":["elementResizeDetectorMaker","require","CoverImage","el","cb","_this","$el","window","$img","getElementForSizing","disableOnMobile","dataset","positioning","x","y","options","parallax","coverImageParallax","console","log","imageWidth","width","imageHeight","height","attr","img","Image","src","innerWidth","elementDimensions","clientHeight","clientWidth","style","setTimeout","resizeImage","addEventListener","erd","strategy","listenTo","draw","friction","imageOffsetX","document","body","scrollTop","imageOffsetY","maximumMovementY","imageDimensions","maximumMovementX","css","requestAnimationFrame","selector","find","querySelector","elementWidth","elementHeight","dimensions","coverDimensions","isNaN","setImageSize","transform","getTransform","classList","add","child_w","child_h","container_w","container_h","scale_factor","max","Math","ceil","min","a","b","elems","querySelectorAll","forEach"],"mappings":"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","file":"coverimage.js","sourcesContent":["const elementResizeDetectorMaker = require('element-resize-detector');\n\nclass CoverImage {\n\tconstructor(el, cb) {\n\t\tconst _this = this;\n\n\t\t_this.$el = el ? el : window;\n\t\t_this.$img = _this.getElementForSizing();\n\t\t_this.disableOnMobile = _this.$el.dataset['cover-image-mobile'] === 'false';\n\t\t_this.cb = cb || (() => {\n\t\t\t//DEBUG console.log(\"Default callback\");\n\t\t});\n\n\t\t_this.positioning = {\n\t\t\tx : 0.5,\n\t\t\ty : 0.5\n\t\t};\n\t\t_this.options = {\n\t\t\tparallax : _this.$el.dataset.coverImageParallax === 'true'\n\t\t};\n\n\t\tif (!_this.$img) {\n\t\t\tconsole.log('Error:', 'no image found', _this.$img );\n\t\t\treturn;\n\t\t}\n\n\t\t_this.imageWidth = _this.$img.width;\n\t\t_this.imageHeight = _this.$img.height;\n\n\t\t// If the image doesn't have harcoded width|height\n\t\t// attributes then load the image to calculate\n\t\t// the dimensions\n\t\tif (!_this.imageWidth || !_this.imageHeight) {\n\t\t\tconsole.log('No dimensions found. Generating image:', _this.$img.attr('src'))\n\t\t\t_this.img = new Image();\n\t\t\t_this.img.src = _this.$img.attr('src');\n\n\t\t\t_this.imageWidth = _this.img.width;\n\t\t\t_this.imageHeight = _this.img.height;\n\t\t}\n\n\t\tif ( _this.disableOnMobile && window.innerWidth < 480 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_this.elementDimensions = {\n\t\t\theight : _this.$el.clientHeight,\n\t\t\twidth  : _this.$el.clientWidth\n\t\t};\n\n\t\t_this.$el.style = `\n\t\t\toverflow : hidden;\n\t\t\tposition : relative;\n\t\t`;\n\n\t\tif (!_this.$img) {\n\t\t\t// TODO: Implement load\n\t\t\tsetTimeout( () => {\n\t\t\t\tnew CoverImage( _this.$el );\n\t\t\t}, 1000);\n\n\t\t} else {\n\t\t\t_this.resizeImage();\n\t\t}\n\n\t\t_this.$img.addEventListener('load', () => {\n\t\t\t_this.resizeImage();\n\t\t}, false);\n\n\t\t_this.$el.addEventListener('transitionend', () => {\n\t\t\t_this.resizeImage();\n\t\t}, false)\n\n\t\tvar erd = elementResizeDetectorMaker({\n\t\t\tstrategy: 'scroll'\n\t\t});\n\n\t\terd.listenTo(_this.$el, () => {\n\t\t\t_this.resizeImage();\n\t\t})\n\n\t\t_this.$el.addEventListener('animationend', () => {\n\t\t\t_this.resizeImage();\n\t\t}, false)\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\t_this.resizeImage();\n\t\t}, true);\n\n\t\twindow.addEventListener('ci.resize', () => {\n\t\t\t_this.resizeImage();\n\t\t}, true);\n\n\t\tif (_this.options.parallax) {\n\t\t\t_this.draw();\n\t\t}\n\t}\n\n\t/**\n\t * Parallax FX\n\t *\n\t */\n\tdraw() {\n\t\tconst _this = this;\n\t\tconst friction = 0.5;\n\t\tconst imageOffsetX = document.body.scrollTop * friction;\n\t\tconst imageOffsetY = document.body.scrollTop * friction;\n\t\tconst maximumMovementY = ( _this.imageDimensions.height - _this.elementDimensions.height) * _this.positioning.y;\n\t\tconst maximumMovementX = ( _this.imageDimensions.width - _this.elementDimensions.width) * _this.positioning.x;\n\n\t\tif ( maximumMovementX > 0 ) {\n\t\t\tif (imageOffsetX < maximumMovementX ) {\n\t\t\t\t// console.log('New position:', maximumMovementX - imageOffsetX);\n\t\t\t\t_this.$img.css({\n\t\t\t\t\t'transform': `translateX(${maximumMovementX - imageOffsetX}px)`\n\t\t\t\t});\n\t\t\t}\n\n\t\t} else {\n\t\t\tif ( imageOffsetY < maximumMovementY ) {\n\t\t\t\t_this.$img.css('transform', `translateY(${maximumMovementY - imageOffsetY}px)`);\n\t\t\t}\n\t\t}\n\n\t\twindow.requestAnimationFrame(() => {\n\t\t\t_this.draw();\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @return DOM Element\n\t */\n\tgetElementForSizing() {\n\t\tlet _this = this;\n\t\tlet selector = _this.$el.dataset['coverImageEl'];\n\n\t\tif ( selector )  {\n\n\t\t\tconsole.log( 'Element selector Present', _this.$el.find( selector ) );\n\n\t\t\treturn _this.$el.find( selector ) ? _this.$el.find( selector ) : _this.$el.find('img');\n\t\t}\n\n\t\treturn _this.$el.querySelector('img');\n\t}\n\n\tresizeImage() {\n\t\tconst _this = this;\n\t\tconst elementWidth = _this.$el.clientWidth;\n\t\tconst elementHeight = _this.$el.clientHeight;\n\t\tconst dimensions = _this.coverDimensions( _this.imageWidth, _this.imageHeight, elementWidth, elementHeight );\n\n\t\t_this.imageDimensions = dimensions;\n\n\t\tif ( isNaN( dimensions.width ) ) {\n\t\t\tconsole.log('Failed to calculate image sizes.');\n\t\t}\n\n\t\t_this.setImageSize();\n\t}\n\n\tsetImageSize() {\n\t\tconst _this = this;\n\n\t\t_this.$img.width = _this.imageDimensions.width;\n\t\t_this.$img.height = _this.imageDimensions.height;\n\n\t\tlet transform = _this.getTransform(\n\t\t\t\t( _this.$el.clientWidth - _this.imageDimensions.width) * _this.positioning.y,\n\t\t\t\t( _this.$el.clientHeight - _this.imageDimensions.height) * _this.positioning.x\n\t\t\t);\n\n\t\t_this.$img.style = `\n\t\t\tposition: absolute;\n\t\t\twidth: ${_this.imageDimensions.width};\n\t\t\theight: ${_this.imageDimensions.height};\n\t\t\ttransform: ${transform};\n\t\t\tmax-width: none;\n\t\t`;\n\n\t\t_this.$img.classList.add('ci--sized');\n\t\t_this.cb();\n\t}\n\n\tgetTransform(x, y) {\n\t\treturn `translate3d(${x}px,${y}px,0)`;\n\t}\n\n\tcoverDimensions(child_w, child_h, container_w, container_h) {\n\t\tconst scale_factor = this.max( container_w / child_w, container_h / child_h );\n\n\t\treturn {\n\t\t\twidth: Math.ceil(child_w * scale_factor),\n\t\t\theight: Math.ceil(child_h * scale_factor)\n\t\t};\n\t}\n\n\tcontainDimensions(child_w, child_h, container_w, container_h) {\n\t\tconst scale_factor = this.min( container_w / child_w, container_h / child_h );\n\n\t\treturn {\n\t\t\twidth: child_w * scale_factor,\n\t\t\theight: child_h * scale_factor\n\t\t};\n\t}\n\n\tmin(a, b) {\n\t\treturn a > b ? b : a;\n\t}\n\n\tmax(a, b) {\n\t\treturn a > b ? a : b;\n\t}\n}\n\nconst elems = document.body.querySelectorAll('[data-cover-image]');\n\nelems.forEach(el => {\n\tnew CoverImage( el );\n});"]}